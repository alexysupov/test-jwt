version: '3'

services:
  frontend:
    build: ./frontend
    restart: always
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      VITE_API_URL: "${VITE_API_URL}"
    volumes:
      - ./frontend:/app
      - /app/node_modules

  backend:
    build: ./backend
    restart: always
    ports:
      - '5000:5000'
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - ./backend:/app
      - /app/node_modules

  postgres:
    image: postgres
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - '8888:8080'
    depends_on:
      - postgres

volumes:
  postgres-data:
